
/  vcsize=1024 ./z8lpanel kaleid.tcl {e|i}  to run on real PDP-8/L
/  vcsize=1024 ./z8lsim   kaleid.tcl {e|i}  to run on simulator

/   choose e for red/green, i for gray/white
/   vcsize can be anything 64 to 1024 (default is 512)

/  turn on am radio to enjoy hours of high voltage circumcision

/ https://homepage.cs.uiowa.edu/~jones/pdp8/man/vc8e.html

/ Kaleidoscope program for the VC8E/VR14 scope.
/ Based on suggestions from page 6-19 of the Small Computer
/ Handbook, 1973.

/   SR<MSB> = ON : show the big circle
/            OFF : normal kaleidoscope

	DISD = 6052
	DILX = 6053
	DILY = 6054
	DIXY = 6055
	DILE = 6056
	DIRE = 6057

	DXL  = 6053
	DIX  = 6054
	DYL  = 6063
	DIY  = 6064
	DYS  = 6067
	DSB0 = 6074

	CLA2 = 7600	/ one cycle faster than plain CLA
	NOP2 = 7400

*0020

		/ note: kaleid.tcl patches initial X and Y
X,	3776		/ any initial value works, but
Y,	4001		/ 0,0 is least interesting

EXTRA,	0
	7775
BIAS,	0
MUNGES,	0
NEWX,	0

SCOUNT, .-.
FOUR,	4
_NOPOP,	7000

LOOP19,	7755
LOOP13,	7765
LOOP15,	7763

WEIRDZ,	0
WEIRD0,	TAD	SCOUNT
WEIRD1,	NOP2
WEIRDC,	7773		/ FLIP WEIRD/NORMAL EVERY 5 CYCLES
EXTRAX,	0

TADNEX,	TAD	NEWX	/ NORMAL, MAKES NICE PATTERNS MOSTLY
TADOLX,	TAD	X	/ ONE OUT OF 19, MILITARY SOUNDING

_0012,	0012
_2631,	2631
_7755,	7755
_7763,	7763
_7765,	7765
_7773,	7773
_7775,	7775

_DSB0,	DSB0

*140

/ Divide AC (signed) by 2**(1 or 2 or 3)
SCALE,	.-.
	SMA
SCPOS,	JMP	SCPOS2	/ normally alternated between 2 and 3
SCNEG,	JMP	SCNEG2	/ ...but set to 1 if weird mode

SCPOS3,
	CLL RAR		/ shift right positive
SCPOS2,
	CLL RAR		/ shift right positive
SCPOS1,
	CLL RAR		/ shift right positive
	JMP I	SCALE

SCNEG3,
	CLL CML	RAR	/ shift right negative
SCNEG2,
	CLL CML RAR	/ shift right negative
SCNEG1,
	CLL CML	RAR	/ shift right negative
	JMP I	SCALE

_SCPOS1, JMP	SCPOS1
_SCNEG1, JMP	SCNEG1

////////////////////////
//  start of program  //
////////////////////////

*200
	.global	__boot
__boot,

	/ NORMALLY, THE TOP TWO BITS OF X,Y ARE IGNORED WHEN PLOTTING TO THE SCREEN.
	/ BUT IF X,Y ARE RTR'D TO FIT 10 BITS (SIGNED) WHEN PLOTTED, A BIG CIRCLE CAN BE SEEN.
	/ IT HAS VARYING CENTER APPROX 0,0 AND VARYING RADIUS.
	/ IF THE BIG CIRCLE IS CLIPPED ON THE EDGES OF SCREEN, THE FUN STUFF APPEARS.
	/ IF THE BIG CIRCLE REMAINS WITHIN SCREEN BOUNDARIES, IE, X & Y REMAIN -2048..-2047 
	/ ALL THE WAY AROUND, A BORING BIG CIRCLE APPEARS WHICH CAN LAST A LONG TIME.

	/ SO WE DETECT A BIG CIRCLE THAT FITS THE SCREEN AND MOVE THE X,Y OUTWARD TO MAKE IT BIGGER
	/ THIS KEEPS THE FUN PATTERNS APPEARING MOST OF THE TIME

START,
	CLA2
START2,
	TAD	X	/ SEE IF X IS NEGATIVE
	SMA CLA
	JMP	STEPPT

	TAD	X	/ SEE IF X .LT. -0.7*2048=-1433=-02631
	TAD	_2631
	SPA CLA
	JMP	STEPPT	/ - X IS .LT. -1433, KEEP POINT AS IS
	TAD	Y	/ SEE IF Y .LT. -0.7*2048=-1433=-02631
	SMA
	CIA		/ - take neg abs Y
	TAD	_2631
	SPA CLA
	JMP	STEPPT	/ - Y IS .LT. -1433, KEEP POINT AS IS

	TAD	X	/ BOTH ARE IN RANGE -1..-1433
	JMS	SCALE	/ ... MAKE THEM BOTH A LITTLE MORE NEGATIVE
	TAD	X	/ IE, X += X/SCALE
	DCA	X
	TAD	Y
	JMS	SCALE
	TAD	Y
	DCA	Y	/ AND Y += Y/SCALE

//	ISZ	MUNGES	/ DISPLAY NUMBER OF MUNGES IN 'MQ' LEDS ON PIDP PANEL
//	TAD	MUNGES
//	MQL

	/ STEP POINT TO NEW POSITION
STEPPT,
	TAD	Y
	JMS	SCALE
	CMA
	TAD	X
	SZL		/ END-AROUND-CARRY
ENDACX,	IAC		/ (NOPPED/UNNOPPED EVERY 13 CYCLES)
	DCA	NEWX	/ X = X - SCALE(Y)
OLDNEW,	TAD	NEWX	/ (use old X once every 19 cycles)
	JMS	SCALE
	TAD	Y
	SZL		/ END-AROUND-CARRY
ENDACY,	IAC		/ (NOPPED/UNNOPPED EVERY 11 CYCLES)
	DCA	Y	/ Y = Y + SCALE(X)

	TAD	NEWX	/ make sure X is updated
	DCA	X

	/ PLOT THE POINT
.if typee
	DIXY		/ previous ppint should be ready to plot by now
.endif
	TAD	X	/ send new point X to display
RTRX,	NOP		/ maybe see the BIG CIRCLE
.if typee
	DILX
.else
	DXL
.endif
	CLA2
	TAD	Y	/ send new point Y to display
RTRY,	NOP		/ maybe see the BIG CIRCLE
.if typee
	DILY
.else
	DYS
.endif
	CLA2

	/ CHANGE SCALE FACTOR EVERY 12K..16K CYCLES
	ISZ	EXTRA+0	/ COUNT 4096 CYCLES
	JMP	START2
	ISZ	EXTRA+1
	JMP	START2
	ISZ	EXTRAX
	NOP2
	TAD	EXTRAX
	DCA	EXTRA+0
	TAD	_7775
	DCA	EXTRA+1

	ISZ	BIAS
	NOP2
	CLA IAC		/ CHANGE SHIFT COUNT IN LOOP 2,3
	AND	BIAS
	CMA
	DCA	SCOUNT	/ SAVE COUNT 2 AS -1, COUNT 3 AS -2
//	CLA CLL CMA RAL
//	TAD	SCOUNT	/ DISPLAY COUNT IN 'SC' ON PIDP8 PANEL
//	DCA	.+2
//	SCL
//	.-.
.if typee
	TAD	SCOUNT	/ SET COLOR GREEN FOR 2, RED FOR 3
	CLL IAC RTL
	AND	FOUR
	DILE
	CLA2
.else
	CLA IAC		/ SET GRAY LEVEL
	AND	SCOUNT
	CLL CML RAL
	TAD	_DSB0
	DCA	.+1
	.-.
.endif
			/ NOPping next instr gives different patterns
WEIRDX,	TAD	SCOUNT	/ SET UP SHIFTING BY THAT AMOUNT
	TAD	_SCPOS1
	DCA	SCPOS
WEIRDY,	TAD	SCOUNT
	TAD	_SCNEG1
	DCA	SCNEG

	ISZ	LOOP15	/ ENABLE/DISABLE END-AROUND-CARRY FOR X
	JMP	IACXOK	/ ...EVERY 13 TIMES THROUGH HERE
	TAD	ENDACX
	IAC
	AND	_7775
	DCA	ENDACX
	TAD	_7763
	DCA	LOOP15
IACXOK,

	ISZ	LOOP13	/ ENABLE/DISABLE END-ARROUND-CARRY FOR Y
	JMP	IACYOK	/ ...EVERY 11 TIMES THROUGH HERE
	TAD	ENDACY
	IAC
	AND	_7775
	DCA	ENDACY
	TAD	_7765
	DCA	LOOP13
IACYOK,

	ISZ	LOOP19	/ USE OLDX ONCE EVERY 19 CYCLES
	JMP	DONEWX
	TAD	_7755
	DCA	LOOP19
	TAD	TADOLX
	JMP	OLNEOK
DONEWX,
	TAD	TADNEX
OLNEOK,
	DCA	OLDNEW

	OSR		/ SELECT NORMAL/BIGCIRCLE DISPLAY
	SPA CLA
	TAD	_0012	/ SR<MSB> SET, USE RTR FOR BIGCIRCLE DISPLAY
	TAD	_NOPOP	/ SR<MSB> CLEAR, USE NOP FOR NORMAL DISPLAY
	DCA	RTRX
	TAD	RTRX
	DCA	RTRY

	ISZ	WEIRDC	/ nop/unnop WEIRD instruction every 5 cycles
	JMP	START2
	TAD	_7773
	DCA	WEIRDC
	ISZ	WEIRDZ
	NOP2
	TAD	WEIRDZ
	RAR
	SNL CLA
	JMP	FLIPWY
	TAD	WEIRDX
	CIA
	TAD	WEIRD0
	TAD	WEIRD1
	DCA	WEIRDX
	JMP	START2
FLIPWY,
	TAD	WEIRDY
	CIA
	TAD	WEIRD0
	TAD	WEIRD1
	DCA	WEIRDY
	JMP	START2

