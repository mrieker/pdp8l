
/  vcsize=1024 ./z8lpanel kaleid.tcl {e|i}  to run on real PDP-8/L
/  vcsize=1024 ./z8lsim   kaleid.tcl {e|i}  to run on simulator

/   choose e for red/green, i for gray/white
/   vcsize can be anything 64 to 1024 (default is 512)

/  turn on am radio to enjoy hours of high voltage circumcision

/ https://homepage.cs.uiowa.edu/~jones/pdp8/man/vc8e.html

/ Kaleidoscope program for the VC8E/VR14 scope.
/ Based on suggestions from page 6-19 of the Small Computer
/ Handbook, 1973.

/   SR<MSB> = ON : show the big circle
/            OFF : normal kaleidoscope

	DISD = 6052
	DILX = 6053
	DILY = 6054
	DIXY = 6055
	DILE = 6056
	DIRE = 6057

	DXL  = 6053
	DIX  = 6054
	DYL  = 6063
	DIY  = 6064
	DYS  = 6067
	DSB0 = 6074

	CLA2 = 7600	/ one cycle faster than plain CLA
	NOP2 = 7400

*0020

		/ note: kaleid.tcl patches initial X and Y
X,	3776		/ any initial value works, but
Y,	4001		/ 0,0 is least interesting

EXTRA,	0
	7775
BIAS,	0
MUNGES,	0
NEWX,	0

SCOUNT, .-.
FOUR,	4

LOOP03, 7775
LOOP07,	7771
LOOP13,	7765
LOOP15,	7763
LOOP19,	7755

WEIRDZ,	0
WEIRD0,	TAD	SCOUNT
WEIRD1,	NOP2
WEIRDC,	7773		/ FLIP WEIRD/NORMAL EVERY 5 CYCLES
EXTRAX,	0

TADNEX,	TAD	NEWX	/ NORMAL, MAKES NICE PATTERNS MOSTLY
TADOLX,	TAD	X	/ ONE OUT OF 19, MILITARY SOUNDING

RARNOP,	07010+07000	/ RAR+NOP
RTRXY,	07000
FLIPX,	0

_DSB0,	DSB0
_FLIPWY, FLIPWY
_RTR,	RTR
_START2, START2
_WEIRDX, WEIRDX
_WEIRDY, WEIRDY

_0012,	0012
_0040,	0040
_2631,	2631
_7755,	7755
_7763,	7763
_7765,	7765
_7771,	7771
_7773,	7773
_7775,	7775


*140

/ Divide AC (signed) by 2**(1 or 2 or 3)
SCALE,	.-.
	SMA
SCPOS,	JMP	SCPOS2	/ normally alternated between 2 and 3
SCNEG,	JMP	SCNEG2	/ ...but set to 1 if weird mode

SCPOS3,
	CLL RAR		/ shift right positive
SCPOS2,
	CLL RAR		/ shift right positive
SCPOS1,
	CLL RAR		/ shift right positive
	JMP I	SCALE

SCNEG3,
	CLL CML	RAR	/ shift right negative
SCNEG2,
	CLL CML RAR	/ shift right negative
SCNEG1,
	CLL CML	RAR	/ shift right negative
	JMP I	SCALE

_SCPOS1, JMP	SCPOS1
_SCNEG1, JMP	SCNEG1

////////////////////////
//  start of program  //
////////////////////////

*200
	.global	__boot
__boot,

	/ NORMALLY, THE TOP TWO BITS OF X,Y ARE IGNORED WHEN PLOTTING TO THE SCREEN.
	/ BUT IF X,Y ARE RTR'D TO FIT 10 BITS (SIGNED) WHEN PLOTTED, A BIG CIRCLE CAN BE SEEN.
	/ IT HAS VARYING CENTER APPROX 0,0 AND VARYING RADIUS.
	/ IF THE BIG CIRCLE IS CLIPPED ON THE EDGES OF SCREEN, THE FUN STUFF APPEARS.
	/ IF THE BIG CIRCLE REMAINS WITHIN SCREEN BOUNDARIES, IE, X & Y REMAIN -2048..-2047 
	/ ALL THE WAY AROUND, A BORING BIG CIRCLE APPEARS WHICH CAN LAST A LONG TIME.

	/ SO WE DETECT A BIG CIRCLE THAT FITS THE SCREEN AND MOVE THE X,Y OUTWARD TO MAKE IT BIGGER
	/ THIS KEEPS THE FUN PATTERNS APPEARING MOST OF THE TIME

START,
	CLA2
START2,
	TAD	X	/ SEE IF BOTH X,Y ARE NEGATIVE
	AND	Y
	SMA CLA
	JMP	STEPPT

	TAD	X	/ SEE IF X .LT. -0.7*2048=-1433=-02631
	TAD	_2631
	SPA CLA
	JMP	STEPPT	/ - X IS .LT. -1433, KEEP POINT AS IS
	TAD	Y	/ SEE IF X .LT. -0.7*2048=-1433=-02631
	TAD	_2631
	SPA CLA
	JMP	STEPPT	/ - Y IS .LT. -1433, KEEP POINT AS IS

	TAD	X	/ BOTH ARE IN RANGE -1..-1433
	JMS	SCALE	/ ... MAKE THEM BOTH A LITTLE MORE NEGATIVE
	TAD	X	/ IE, X += X/SCALE
	DCA	X
	TAD	Y
	JMS	SCALE
	TAD	Y
	DCA	Y	/ AND Y += Y/SCALE

//	ISZ	MUNGES	/ DISPLAY NUMBER OF MUNGES IN 'MQ' LEDS ON PIDP PANEL
//	TAD	MUNGES
//	MQL

	/ STEP POINT TO NEW POSITION
STEPPT,
	TAD	Y
	JMS	SCALE
	CMA
	TAD	X
	SZL		/ END-AROUND-CARRY
ENDACX,	IAC		/ (NOPPED/UNNOPPED EVERY 13 CYCLES)
	DCA	NEWX	/ X = X - SCALE(Y)
OLDNEW,	TAD	NEWX	/ (use old X once every 19 cycles)
	JMS	SCALE
	TAD	Y
	SZL		/ END-AROUND-CARRY
ENDACY,	IAC		/ (NOPPED/UNNOPPED EVERY 11 CYCLES)
	DCA	Y	/ Y = Y + SCALE(X)

	TAD	NEWX	/ make sure X is updated
	DCA	X

	/ PLOT THE POINT
.if typee
	DIXY		/ previous ppint should be ready to plot by now
.endif
	TAD	X	/ send new point X to display
RTRX,	NOP		/ which 10 of the 12 bits to see
.if typee
	DILX
.else
	DXL
.endif
	CLA2
	TAD	Y	/ send new point Y to display
RTRY,	NOP		/ which 10 of the 12 bits to see
.if typee
	DILY
.else
	DYS
.endif

	/ CHANGE SCALE FACTOR EVERY 12K..16K CYCLES
	ISZ	EXTRA+0	/ COUNT 4096 CYCLES
	JMP	START
	ISZ	EXTRA+1
	JMP	START
	ISZ	EXTRAX
	NOP2
	TAD	EXTRAX
	DCA	EXTRA+0
	TAD	_7775
	DCA	EXTRA+1

	ISZ	BIAS
	NOP2
	CLA IAC		/ CHANGE SHIFT COUNT IN LOOP 2,3
	AND	BIAS
	CMA
	DCA	SCOUNT	/ SAVE COUNT 2 AS -1, COUNT 3 AS -2
//	CLA CLL CMA RAL
//	TAD	SCOUNT	/ DISPLAY COUNT IN 'SC' ON PIDP8 PANEL
//	DCA	.+2
//	SCL
//	.-.
.if typee
	TAD	SCOUNT	/ SET COLOR GREEN FOR 2, RED FOR 3
	CLL IAC RTL
	AND	FOUR
	DILE
	CLA2
.else
	CLA IAC		/ SET GRAY LEVEL
	AND	SCOUNT
	CLL CML RAL
	TAD	_DSB0
	DCA	.+1
	.-.
.endif
			/ NOPping next instr gives different patterns
WEIRDX,	TAD	SCOUNT	/ SET UP SHIFTING BY THAT AMOUNT
	TAD	_SCPOS1
	DCA	SCPOS
WEIRDY,	TAD	SCOUNT
	TAD	_SCNEG1
	DCA	SCNEG

	ISZ	LOOP15	/ ENABLE/DISABLE END-AROUND-CARRY FOR X
	JMP	IACXOK	/ ...EVERY 13 TIMES THROUGH HERE
	TAD	ENDACX
	IAC
	AND	_7775
	DCA	ENDACX
	TAD	_7763
	DCA	LOOP15
IACXOK,

	ISZ	LOOP13	/ ENABLE/DISABLE END-ARROUND-CARRY FOR Y
	JMP	IACYOK	/ ...EVERY 11 TIMES THROUGH HERE
	TAD	ENDACY
	IAC
	AND	_7775
	DCA	ENDACY
	TAD	_7765
	DCA	LOOP13
IACYOK,

	ISZ	LOOP19	/ USE OLDX ONCE EVERY 19 CYCLES
	JMP	DONEWX
	TAD	_7755
	DCA	LOOP19
	TAD	TADOLX
	JMP	OLNEOK
DONEWX,
	TAD	TADNEX
OLNEOK,
	DCA	OLDNEW

	OSR		/ SELECT NORMAL/BIGCIRCLE DISPLAY
	SMA CLA
	JMP	NORMRO	/ SR<MSB> CLEAR, USE NORMAL ROTATION
	TAD	_RTR	/ SR<MSB> SET, USE RTR FOR BIGCIRCLE DISPLAY
	JMP	COPRXY	/ ... DISPLAYING TOP 10 BITS OF 12 BIT X AND Y
NORMRO,
	ISZ	LOOP07	/ SWITCH BETWEEN RAR AND NOP TO SCALE POINT ON DISPLAY
	JMP	RTRSOK	/ ... DISPLAYING EITHER MIDDLE OR LOW 10 BITS OF 12 BIT X AND Y
	TAD	_7771
	DCA	LOOP07
	TAD	RTRXY
	CIA
	TAD	RARNOP
	DCA	RTRXY
	TAD	RTRXY
COPRXY,
	DCA	RTRY
	JMP	SETUPX
RTRSOK,

	ISZ	LOOP03	/ EVERY 3RD LOOP
	JMP	FLIPOK
	TAD	_7775
	DCA	LOOP03
	TAD	FLIPX	/ ...FLIP THE X AXIS
	TAD	_0040	/ ...BY INSERTING/REMOVING A CMA INSTRUCTION
	AND	_0040
	DCA	FLIPX
SETUPX,
	TAD	RTRY
	TAD	FLIPX
	DCA	RTRX
FLIPOK,

	ISZ	WEIRDC	/ nop/unnop WEIRD instruction every 5 cycles
	JMP	START2
	TAD	_7773
	DCA	WEIRDC
	ISZ	WEIRDZ
	NOP2
	TAD	WEIRDZ
	RAR
	SNL CLA
	JMP I	_FLIPWY
	TAD I	_WEIRDX
	CIA
	TAD	WEIRD0
	TAD	WEIRD1
	DCA I	_WEIRDX
	JMP I	_START2
FLIPWY,
	TAD I	_WEIRDY
	CIA
	TAD	WEIRD0
	TAD	WEIRD1
	DCA I	_WEIRDY
	JMP I	_START2

