
// pdp8v/asm/assemble -pal binloader.pal binloader.obj > binloader.lis
// pdp8v/asm/link -o binloader.oct binloader.obj > binloader.map
// pdp8v/asm/octtorim < binloader.oct > binloader.rim

/BINARV AND DECTAPE LOADERS FOR
/555 CONTROL

	CDF = 6201
	KCC = 6032
	KRB = 6036
	KSF = 6031
	RFC = 6014
	RRB = 6012
	RDF = 6214
	RSF = 6011

*7612
SWITCH,	0
MEMTEM,	0
CHAR,	0
CHKSUM,	0
ORIGIN,	0

*7626
/EXTRACT ERRORS, FIELD, L/T
BEGG,	0
	DCA	SWITCH		/SET SWITCH
	JMS	READ		/GET A CHARACTER
	TAD	M376		/TEST FOR 377
	SPA SNA CLA
	JMP	.+ 4		/NO
	ISZ	SWITCH		/VES: COMPLEMENT SWITCH
	CMA
	JMP	BEGG+ 1
	TAD	SWITCH		/NOT 377
	SZA CLA			/1 S SWITC H SET?
	JMP	BEGG+2		/VES; IGNORE
	TAD	CHAR		/NO; TEST FOR CODE
	AND	MASK		/TVPES
	TAD	M200
	SPA
	ISZ	BEGG		/DATA OR ORIGIN
	SPA SNA CLA
	JMP I	BEGG		/DATA, ORIGIN, or L/T
	TAD	CHAR		/FIELD SETTING
	AND	FMASK
	TAD	CHANGE
	DCA	MEMTEM
	JMP	BEGG+2		/CONTINUE INPUT
FMASK,	70
CHANGE,	CDF
READ,	0
	0
LOR,	KSF			/WAIT FOR FLAG
	JMP	.-1
	KRB
	DCA	CHAR
	TAD	CHAR
	JMP I	READ
HIR,	RSF
	JMP	.-1
	RRB RFC
	JMP	LOR+ 3
MASK,	300
/TRAILER CODE SEEN
BEND,	JMS	ASSEMB
	CIA
	TAD	CHKSUM
M376,	HLT
BEGIN,	KCC
	RFC
	RDF
	TAD	CHANGE
	DCA	MEMTEM		/SAVE FIELD INSTRUCTION
	CLA OSR
	SMA CLA
	TAD	HIRI
	TAD	LORI
	DCA	READ+ 1
	JMS	BEGG
	JMP	.-1		/IGNORE LEADER
GO,	DCA	CHKSUM
	TAD	MEMTEM
	DCA	MEMFLD
	TAD	CHAR
	DCA	WORD1
	JMS	READ
	DCA	WORD2
	JMS	BEGG		/LOOK AHEAD
	JMP	BEND		/TRAILER, END
	JMS	ASSEMB
	SNL
	JMP	MEMFLD
	DCA	ORIGIN
CHEX,	TAD	WORD1
	TAD	WORD2
	TAD	CHKSUM
	JMP	GO
MEMFLD,	0
	DCA I	ORIGIN
	ISZ	ORIGIN
M200,	7600
	JMP	CHEX
ASSEMB,	0
	TAD	WORD1
	CLL RTL
	RTL
	RTL
	TAD	WORD2
	JMP I	ASSEMB
LORI,	JMP	LOR
HIRI,	HIR-LOR
	0
WORD2,	0

*7776
WORD1,	0

	.global	__boot
__boot,
	JMP	BEGIN 

